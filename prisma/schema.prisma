generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ingredients {
  Name                     String                     @db.VarChar
  UM                       String                     @db.VarChar
  Carbs                    Float?                     @db.Real
  Proteins                 Float?                     @db.Real
  Fat                      Float?                     @db.Real
  Countable                Boolean?
  Id                       Int                        @id @unique @default(autoincrement())
  Quantity                 Float?                     @db.Real
  
  ingredientsRelationships ingredientsRelationships[]
}

model ingredientsRelationships {
  RecipeId     Int
  IngredientId Int
  Quantity     Float?      @db.Real

  ingredients  ingredients @relation(fields: [IngredientId], references: [Id], onDelete: NoAction, onUpdate: NoAction)
  recipes      recipes     @relation(fields: [RecipeId], references: [Id], onDelete: NoAction, onUpdate: NoAction)

  @@id([RecipeId, IngredientId])
}

model instructions {
  Id                        Int                         @id @default(autoincrement())
  Description               String?                     @db.VarChar

  instructionsRelationships instructionsRelationships[]
}

model instructionsRelationships {
  RecipeId      Int
  InstructionId Int

  instructions  instructions @relation(fields: [InstructionId], references: [Id], onDelete: NoAction, onUpdate: NoAction)
  recipes       recipes      @relation(fields: [RecipeId], references: [Id], onDelete: NoAction, onUpdate: NoAction)

  @@id([RecipeId, InstructionId])
}

model preparations {
  Id                        Int                         @id @default(autoincrement())
  PreparationTime           Int?
  CookingTime               Int?

  preparationsRelationships preparationsRelationships[]
}

model preparationsRelationships {
  RecipeId      Int
  PreparationId Int

  preparations  preparations @relation(fields: [PreparationId], references: [Id], onDelete: NoAction, onUpdate: NoAction)
  recipes       recipes      @relation(fields: [RecipeId], references: [Id], onDelete: NoAction, onUpdate: NoAction)

  @@id([RecipeId, PreparationId])
}

model recipes {
  Id                        Int                         @id @default(autoincrement())
  ImageLink                 String?                     @db.VarChar
  Title                     String?                     @db.VarChar
  Description               String?                     @db.VarChar
  PreparationTime           Float?
  CookingTime               Float?

  Ingredients  ingredientsRelationships[]
  Instructions instructionsRelationships[]
  Preparations preparationsRelationships[]
}
